{"version":3,"sources":["hooks/useFetch.js","hooks/useLocalStorage.js","components/NoPokemonCardBox.js","components/SearchingPokemonCardBox.js","components/CardBox.js","components/CardBoxList.js","components/JumbotronSection.js","components/SearchBox.js","components/PaginationSection.js","containers/App.js","serviceWorker.js","index.js"],"names":["useFetch","url","useState","data","isLoading","currentState","setCurrentState","useEffect","mounted","abortController","AbortController","state","a","fetch","signal","resp","json","abort","useLocalStorage","key","initialValue","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","NoPokemonCardBox","message","Card","className","Img","variant","src","process","alt","style","width","height","marginTop","Body","Title","SearchingPokemondCardBox","Spinner","animation","CardBox","cardBoxItem","source","toLowerCase","hovered","setHovered","customStyle","useSpring","opacity","from","sprites","front_default","name","charAt","toUpperCase","slice","transition","onMouseOut","onMouseOver","transform","div","CardBoxList","pokemons","marginLeft","marginRight","map","pokemon","index","id","JumbotronSection","Jumbotron","fluid","Container","href","title","target","rel","SearchBox","searchValue","searchFunction","InputGroup","size","FormControl","aria-describedby","type","placeholder","onChange","PaginationSection","previousOnClickFunction","nextOnClickFunction","disablePrevious","disableNext","Button","disabled","onClick","App","cardGrid","offset","limit","urlParams","setUrlParams","setUrl","fieldValue","setFieldValue","results","previous","next","e","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0b095903.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const useFetch = (url) => {\n  const [currentState, setCurrentState] = useState({\n    data: null,\n    isLoading: true,\n  });\n\n  useEffect(() => {\n    let mounted = true;\n    const abortController = new AbortController();\n    const cleanup = () => {\n      mounted = false;\n      abortController.abort();\n    };\n\n    setCurrentState((state) => ({\n      data: state.data,\n      isLoading: true,\n    }));\n\n    if (mounted) {\n      (async () => {\n        try {\n          const resp = await fetch(url, {\n            signal: abortController.signal,\n          });\n          const data = await resp.json();\n\n          // if (mounted) return setCurrentState({ data: data, isLoading: false });\n          return setCurrentState({ data: data, isLoading: false });\n        } catch (error) {\n          setCurrentState({ data: 'Pokemon not found', isLoading: false });\n        }\n      })();\n    }\n\n    return cleanup;\n  }, [url]);\n\n  return currentState;\n};\n","import { useState } from 'react';\n\n// https://usehooks.com/useLocalStorage/\n\nexport const useLocalStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const data = window.localStorage.getItem(key);\n      return data ? JSON.parse(data) : initialValue;\n    } catch (error) {\n      console.log('Error saving data locally::', error);\n      return initialValue;\n    }\n  });\n  const setValue = (value) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save State\n      setStoredValue(valueToStore);\n\n      // Save Locally\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log('setValue error has occurred::', error);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\n\nexport const NoPokemonCardBox = ({ message }) => {\n  return (\n    <Card className='flex-child'>\n      <Card.Img\n        variant='top'\n        src={process.env.PUBLIC_URL + '/logo512.png'}\n        alt='pokeball image'\n        style={{\n          width: '96px',\n          height: '96px',\n          marginTop: '1.25rem',\n        }}\n      />\n      <Card.Body>\n        <Card.Title>{message}</Card.Title>\n      </Card.Body>\n    </Card>\n  );\n};\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Spinner from 'react-bootstrap/Spinner';\n\nexport const SearchingPokemondCardBox = () => {\n  return (\n    <Card className='flex-child'>\n      <div\n        style={{\n          width: '96px',\n          height: '96px',\n        }}\n        className='container-box'\n      >\n        <Spinner animation='border' variant='danger' />\n      </div>\n      <Card.Body>\n        <Card.Title>Searching for Pokémon</Card.Title>\n      </Card.Body>\n    </Card>\n  );\n};\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport './Components.css';\nimport { useFetch } from '../hooks/useFetch';\nimport { useSpring, animated } from 'react-spring';\nimport { NoPokemonCardBox } from './NoPokemonCardBox';\nimport { SearchingPokemondCardBox } from './SearchingPokemonCardBox';\n\nconst CardBox = ({ source }) => {\n  let { data, isLoading } = useFetch(source.toLowerCase());\n  const [hovered, setHovered] = useState(false);\n  const customStyle = useSpring({\n    opacity: 1,\n    from: { opacity: 0 },\n  });\n\n  let cardBoxItem;\n\n  if (isLoading === false) {\n    try {\n      cardBoxItem = (\n        <Card className='flex-child'>\n          {data.sprites.front_default ? (\n            <Card.Img\n              variant='top'\n              src={data.sprites.front_default}\n              alt={data.name.charAt(0).toUpperCase() + data.name.slice(1)}\n              style={{\n                width: '96px',\n                height: '96px',\n                marginTop: '1.25rem',\n                transition: 'all 300ms ease-in-out 300ms',\n              }}\n            />\n          ) : (\n            <Card.Img\n              variant='top'\n              src={process.env.PUBLIC_URL + '/logo512.png'}\n              alt={data.name.charAt(0).toUpperCase() + data.name.slice(1)}\n              style={{\n                width: '96px',\n                height: '96px',\n                marginTop: '1.25rem',\n                transition: 'all 300ms ease-in-out 300ms',\n              }}\n            />\n          )}\n          <Card.Body>\n            <Card.Title>\n              {data.name.charAt(0).toUpperCase() + data.name.slice(1)}\n            </Card.Title>\n          </Card.Body>\n        </Card>\n      );\n    } catch (error) {\n      cardBoxItem = <NoPokemonCardBox message={data} />;\n    }\n  } else {\n    cardBoxItem = <SearchingPokemondCardBox />;\n  }\n\n  return (\n    <div\n      onMouseOut={() => setHovered(false)}\n      onMouseOver={() => setHovered(true)}\n      style={{\n        transition: 'all 300ms ease-in-out',\n        transform: `${hovered ? 'scale(1.1)' : 'scale(1)'}`,\n      }}\n    >\n      <animated.div style={customStyle}>{cardBoxItem}</animated.div>\n    </div>\n  );\n};\n\nexport default CardBox;\n","import React from 'react';\nimport CardBox from './CardBox';\nimport './Components.css';\n\nconst CardBoxList = ({ pokemons }) => {\n  return (\n    <div\n      className='container-box'\n      style={{ marginLeft: '10%', marginRight: '10%' }}\n    >\n      {pokemons.map((pokemon, index) => (\n        <CardBox\n          key={index}\n          id={index}\n          name={pokemon.name}\n          source={pokemon.url}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default CardBoxList;\n","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\n\nexport const JumbotronSection = () => {\n  return (\n    <div>\n      {' '}\n      <Jumbotron fluid className='text-white' id='jumbotron-section'>\n        <Container>\n          <h1 className='display-1' id='jumbotron-title'>\n            Pokédex Project\n          </h1>\n          <p className='lead'>\n            Hello friend! I'm{' '}\n            <a\n              href='https://twitter.com/JerylDEv'\n              title='Jeryl'\n              className='link-reference'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              Jeryl\n            </a>\n            ! I created this web site to practice{' '}\n            <a\n              href='https://reactjs.org/docs/hooks-intro.html'\n              title='React Hooks'\n              className='link-reference'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              React Hooks\n            </a>\n            .\n          </p>\n\n          <p className='lead'>\n            The API I used is made by{' '}\n            <a\n              href='https://pokeapi.co/'\n              title='pokeapi.co'\n              className='link-reference'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              PokéAPI\n            </a>{' '}\n            while the Pokéball icons I used are created by{' '}\n            <a\n              href='https://www.flaticon.com/authors/those-icons'\n              title='Those Icons'\n              className='link-reference'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              Those Icons\n            </a>{' '}\n            from{' '}\n            <a\n              href='https://www.flaticon.com/'\n              title='Flaticon'\n              className='link-reference'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              {' '}\n              Flaticon\n            </a>\n            .\n          </p>\n        </Container>\n      </Jumbotron>\n    </div>\n  );\n};\n","import React from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\nexport const SearchBox = ({ searchValue, searchFunction }) => {\n  return (\n    <div style={{ marginLeft: '15%', marginRight: '15%' }}>\n      <InputGroup className='mb-3' size='lg'>\n        {/* <InputGroup.Prepend>\n            <InputGroup.Text id='general-button-class'>\n              <Search />\n            </InputGroup.Text>\n          </InputGroup.Prepend> */}\n        <FormControl\n          id='basic-url'\n          aria-describedby='basic-addon3'\n          type='search'\n          placeholder='Search a Pokémon'\n          value={searchValue}\n          onChange={searchFunction}\n        />\n        {/* <InputGroup.Append>\n            <Button\n              variant='primary'\n              type='submit'\n              size='lg'\n              id='general-button-class'\n              onClick={() => setActivateSearch(true)}\n            >\n              <Search />\n            </Button>\n          </InputGroup.Append> */}\n      </InputGroup>\n    </div>\n  );\n};\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nexport const PaginationSection = ({\n  previousOnClickFunction,\n  nextOnClickFunction,\n  disablePrevious,\n  disableNext,\n  searchValue,\n}) => {\n  return (\n    <div className='container-box'>\n      <Button\n        disabled={disablePrevious || searchValue !== '' ? true : false}\n        variant='primary'\n        size='lg'\n        id='previous-button'\n        // onClick={() => setUrl(data.previous)}\n        onClick={previousOnClickFunction}\n        className='pagination-box'\n      >\n        Previous\n      </Button>\n\n      <Button\n        disabled={disableNext || searchValue !== '' ? true : false}\n        variant='primary'\n        size='lg'\n        id='next-button'\n        // onClick={() => setUrl(data.next)}\n        onClick={nextOnClickFunction}\n        className='pagination-box'\n      >\n        Next\n      </Button>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { useFetch } from '../hooks/useFetch';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\n\nimport CardsList from '../components/CardBoxList';\nimport CardBox from '../components/CardBox';\n\nimport { JumbotronSection } from '../components/JumbotronSection';\nimport { SearchBox } from '../components/SearchBox';\nimport { PaginationSection } from '../components/PaginationSection';\n\nfunction App() {\n  // const [urlParams, setUrlParams] = useState({ offset: 0, limit: 20 });\n  const [urlParams, setUrlParams] = useLocalStorage('urlParams', {\n    offset: 0,\n    limit: 20,\n  });\n  // const [url, setUrl] = useState('https://pokeapi.co/api/v2/pokemon/');\n  const [url, setUrl] = useLocalStorage(\n    'url',\n    'https://pokeapi.co/api/v2/pokemon/'\n  );\n  const { data, isLoading } = useFetch(url);\n  const [fieldValue, setFieldValue] = useState('');\n\n  let cardGrid,\n    disablePrevious = false,\n    disableNext = false;\n\n  if (isLoading === false) {\n    if (fieldValue !== '') {\n      cardGrid = (\n        <div className='container-box'>\n          <CardBox\n            className='pokemon-item'\n            source={'https://pokeapi.co/api/v2/pokemon/' + fieldValue}\n          />\n        </div>\n      );\n    } else {\n      cardGrid = <CardsList pokemons={data.results} />;\n    }\n\n    if (!data.previous) {\n      disablePrevious = true;\n    }\n    if (!data.next) {\n      disableNext = true;\n    }\n  }\n\n  return (\n    <div>\n      <JumbotronSection />\n      <SearchBox\n        searchValue={fieldValue}\n        searchFunction={(e) => {\n          // setActivateSearch(false);\n          setFieldValue(e.target.value);\n        }}\n      />\n      <PaginationSection\n        previousOnClickFunction={() => {\n          // console.log('offset previous before update???', urlParams.offset);\n          setUrlParams((currentState) => ({\n            offset: currentState.offset - 20,\n            limit: 20,\n          }));\n          setUrl(\n            `https://pokeapi.co/api/v2/pokemon/?offset=${\n              urlParams.offset - 20\n            }&limit=${urlParams.limit}`\n          );\n        }}\n        nextOnClickFunction={() => {\n          // console.log('offset next before update???', urlParams.offset);\n          setUrlParams((currentState) => ({\n            offset: currentState.offset + 20,\n            limit: 20,\n          }));\n          setUrl(\n            `https://pokeapi.co/api/v2/pokemon/?offset=${\n              urlParams.offset + 20\n            }&limit=${urlParams.limit}`\n          );\n        }}\n        disablePrevious={disablePrevious}\n        disableNext={disableNext}\n        searchValue={fieldValue}\n      />\n      {cardGrid}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}